(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["mesh-viewer"],{"3e72":function(e,t,i){var s={"./chess-knight.json":["ad0d","chunk-2d21368d"]};function n(e){if(!i.o(s,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=s[e],n=t[0];return i.e(t[1]).then((function(){return i.t(n,3)}))}n.keys=function(){return Object.keys(s)},n.id="3e72",e.exports=n},5027:function(e,t,i){"use strict";i.d(t,"a",(function(){return s}));function s(){return new Promise(e=>requestAnimationFrame(e))}},6445:function(e,t,i){"use strict";t["a"]={created(){this.quitCleaner=new Promise(e=>this.quitClear=e)},methods:{async appendCleaner(e){"pending"!==await Promise.race([this.quitCleaner,"pending"])?e():this.quitCleaner=this.quitCleaner.then(e)}},beforeDestroy(){this.quitClear()}}},"8d36":function(e,t,i){},c638:function(e,t,i){"use strict";const s=.01;t["a"]={created(){this.sensorAcceleration=[0,0,0],this.sensorVelocity=[0,0,0],this.sensorDamping=s,"undefined"!==typeof LinearAccelerationSensor&&navigator.permissions.query({name:"accelerometer"}).then(e=>{if("granted"===e.state){const e=new LinearAccelerationSensor({frequency:60}),t=()=>{this.sensorAcceleration=[e.x,e.y,e.z],this.sensorVelocity.forEach((e,t)=>{this.sensorVelocity[t]+=this.sensorAcceleration[t],this.sensorVelocity[t]*=1-this.sensorDamping})};e.addEventListener("reading",t),this.appendCleaner(()=>e.removeEventListener("reading",t)),e.start()}})}}},cd67:function(e,t,i){"use strict";var s=i("8d36"),n=i.n(s);n.a},dc0d:function(e,t,i){"use strict";i.r(t);var s=function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{directives:[{name:"resize",rawName:"v-resize",value:e.onResize,expression:"onResize"}],staticClass:"mesh-viewer"},[i("article",{on:{mousemove:e.onMouseMove,mousewheel:function(t){return t.preventDefault(),e.onMouseWheel(t)},touchmove:function(t){return t.preventDefault(),e.onTouchMove(t)},touchend:e.onTouchEnd}},[i("canvas",{ref:"canvas",attrs:{width:e.size.width,height:e.size.height}}),i("div",e._l(e.labels,(function(t,s){return i("span",{key:s,staticClass:"label",style:{left:100*t.position.x+"%",top:100*t.position.y+"%"},domProps:{innerHTML:e._s(t.content)}})})),0),i("span",{directives:[{name:"show",rawName:"v-show",value:e.showStatus,expression:"showStatus"}],staticClass:"status"},[e.fps?i("span",{staticClass:"fps"},[e._v("fps "),i("em",[e._v(e._s(e.fps))])]):e._e()])])])},n=[],a=i("428d"),o=i.n(a),h=i("5a89"),r=i("5027"),c=i("819c"),l=i("6445"),u=i("c638");const d=(e,t,i)=>new h["x"](e*Math.sin(t)*Math.cos(i),e*Math.cos(t),e*Math.sin(t)*Math.sin(i));class p{constructor(e,t,{content:i,offset:s=[0,1.3,0]}={}){this.camera=t,this.content=i,this.graphNode=new h["n"],this.graphNode.position.set(...s),e.add(this.graphNode),this._pos=null}get position(){return this._pos||this.updatePosition(),this._pos}updatePosition(){const e=this.graphNode.getWorldPosition(new h["x"]).project(this.camera);this._pos=this._pos||{},this._pos.x=(e.x+1)/2,this._pos.y=(1-e.y)/2}}const w=4e-4;var m={name:"mesh-viewer",directives:{resize:o.a},mixins:[l["a"],u["a"]],props:{light:{default:"white"},entities:Array,showStatus:{default:!1},cameraInit:{type:Object,default:()=>({radius:6,theta:0,phi:0})}},data(){return{size:{width:800,height:800},fps:0,labels:[]}},created(){0},mounted(){this.initializeRenderer(),this.createScene(),this.render()},beforeDestroy(){this.rendererActive=!1},methods:{onResize(){this.size={width:this.$el.clientWidth,height:this.$el.clientHeight}},initializeRenderer(){this.renderer=new h["y"]({antialias:!0,canvas:this.$refs.canvas,alpha:!0}),this.renderer.setClearColor(new h["c"]("lightblue"),1),this.renderer.setSize(this.size.width,this.size.height,!1),this.camera=new h["p"](60,this.size.width/this.size.height,.1,100),this.viewTheta=this.cameraInit.theta+.5*Math.PI,this.viewPhi=this.cameraInit.phi+.5*Math.PI,this.viewRadius=this.cameraInit.radius,this.scene=new h["s"];const e=new h["f"](this.light,1);e.position.set(-30,100,60),e.target=this.scene,this.scene.add(e);const t=new h["f"]("lightblue",.4);t.position.set(0,1e3,0),t.target=this.scene,this.scene.add(t),this.scene.add(new h["a"]("#323f43")),this.rendererActive=!0},async render(){let e=performance.now(),t=Math.floor(e/1e3),i=0,s=0;while(this.rendererActive){this.sensorVelocity&&(this.viewTheta+=this.sensorVelocity[1]*w,this.viewPhi+=this.sensorVelocity[0]*w,this.viewTheta=Math.max(Math.min(this.viewTheta,Math.PI-.01),.01)),this.camera.position.copy(d(this.viewRadius,this.viewTheta,this.viewPhi)),this.camera.lookAt(0,0,0),this.renderer.render(this.scene,this.camera),this.updateLabels(),++i;const n=performance.now();s=Math.max(s,n-e);const a=Math.floor(n/1e3);a>t&&(this.fps=i/(a-t),i=0,s=0,t=a),e=n,await Object(r["a"])()}},async createScene(){if(this.entities)for(const e of this.entities){const t=new h["n"];this.scene.add(t);const{default:s}=await i("3e72")(`./${e.prototype}.json`),n=await new Promise(e=>(new h["o"]).parse(s,e));if(t.add(n),e.position&&t.position.set(...e.position),e.quaternion?n.quaternion.set(...e.quaternion):e.euler&&n.quaternion.setFromEuler(new h["g"](...e.euler,"XZY")),e.label){const i=new p(t,this.camera,"object"===typeof e.label?e.label:{content:e.label});this.labels.push(i)}}},updateLabels(){for(const e of this.labels)e.updatePosition();this.labels.length&&this.$forceUpdate()},onMouseMove(e){1===e.buttons&&(this.viewPhi+=.01*e.movementX,this.viewTheta-=.01*e.movementY,this.viewTheta=Math.max(Math.min(this.viewTheta,Math.PI-.01),.01))},onTouchMove(e){const t=e.touches[0];if(this.lastTouchPoint){const e=t.pageX-this.lastTouchPoint.pageX,i=t.pageY-this.lastTouchPoint.pageY;this.viewPhi+=.01*e,this.viewTheta-=.01*i,this.viewTheta=Math.max(Math.min(this.viewTheta,Math.PI-.01),.01)}this.lastTouchPoint={pageX:t.pageX,pageY:t.pageY}},onTouchEnd(){this.lastTouchPoint=null},onMouseWheel(e){this.viewRadius*=Math.exp(.001*e.deltaY)},permute(e){this.elements.forEach((t,i)=>{const s=c["k"][elementsSchema[i].index][e];t.position.copy(this.elementPositions[s])}),this.elementPositions=this.elements.reduce((e,t,i)=>(e[elementsSchema[i].index]=t.position.clone(),e),[]),this.rotationIndex=0,this.rotationT=0}},watch:{size(e){this.camera.aspect=e.width/e.height,this.camera.updateProjectionMatrix(),this.renderer.setSize(e.width,e.height,!1)}}},f=m,v=(i("cd67"),i("0c7c")),g=Object(v["a"])(f,s,n,!1,null,"65a99db7",null);t["default"]=g.exports}}]);
//# sourceMappingURL=mesh-viewer.0b0fa072.js.map